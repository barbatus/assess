fragment UserBookData on UserBook {
  id
  date
  status
}

fragment BookData on Book {
  id
  title
  author
}

query GetUserBooks($where: UserBookWhereInput, $order: [UserBookOrderByWithRelationInput!], $offset: Int, $pageSize: Int) {
  userBooks(where: $where, orderBy: $order, skip: $offset, take: $pageSize) {
    ...UserBookData
    book {
      ...BookData
    }
  }
}

mutation UpdateUserBook($data: UserBookUpdateInput!, $where: UserBookWhereUniqueInput!) {
  updateOneUserBook(data: $data, where: $where) {
    ...UserBookData
    book {
      ...BookData
    }
  }
}

mutation AddUserBook($data: UserBookCreateInput!) {
  createOneUserBook(data: $data) {
    ...UserBookData
    book {
      ...BookData
    }
  }
}

query GetUserBook($where: UserBookWhereUniqueInput!) {
  userBook(where: $where) {
    ...UserBookData
    book {
      ...BookData
    }
  }
}

mutation FinishBook($book: FinishInput!) {
  finishBook(book: $book) {
    ...UserBookData
    book {
      ...BookData
    }
  }
}

subscription NewFinish {
  newFinish {
    userName
    bookTitle
    rating
  }
}
